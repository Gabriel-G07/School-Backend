# Generated by Django 3.2.13 on 2024-11-27 09:13

import Admin_app.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCalender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(2013), django.core.validators.MaxValueValidator(2100)])),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third'), ('Holyday April', 'Holyday April'), ('Holyday August', 'Holyday August'), ('Holyday December', 'Holyday December')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('term_fees', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'Calender',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=50)),
                ('entity_type', models.CharField(choices=[('DEVELOPER', 'Developer'), ('STAFF', 'Staff'), ('PARENT', 'Parent'), ('STUDENT', 'Student')], max_length=10)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50)),
                ('house_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('schooltype', models.CharField(choices=[('Primary', 'Primary'), ('High School', 'High School')], max_length=13)),
                ('location', models.CharField(db_index=True, max_length=50)),
            ],
            options={
                'db_table': 'Campus',
            },
        ),
        migrations.CreateModel(
            name='ClassroomsPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=10)),
                ('class_level', models.CharField(choices=[('ECD A', 'ECD A'), ('ECD B', 'ECD B'), ('Grade 1', 'Grade 1'), ('Grade 2', 'Grade 2'), ('Grade 3', 'Grade 3'), ('Grade 4', 'Grade 4'), ('Grade 5', 'Grade 5'), ('Grade 6', 'Grade 6'), ('Grade 7', 'Grade 7')], max_length=10)),
                ('class_code', models.CharField(choices=[('Red', 'Red'), ('Blue', 'Blue'), ('Green', 'Green'), ('Yellow', 'Yellow')], max_length=20)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms_campus', to='Admin_app.campus')),
            ],
            options={
                'db_table': 'Classrooms',
            },
        ),
        migrations.CreateModel(
            name='JobApplications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('PhoneNumber', models.CharField(max_length=20)),
                ('pPosition', models.CharField(max_length=50)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('Marital_Status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divoced', 'Divoced')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50)),
                ('house_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'JobApplications',
            },
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('username', models.CharField(db_index=True, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('surname', models.CharField(db_index=True, max_length=50)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('id_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('occupation', models.CharField(max_length=50)),
                ('relationship', models.CharField(max_length=20)),
                ('profile_photo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='parents_images/')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_address', to='Admin_app.address')),
            ],
            options={
                'db_table': 'Parents',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumbers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=50)),
                ('entity_type', models.CharField(choices=[('DEVELOPER', 'Developer'), ('STAFF', 'Staff'), ('PARENT', 'Parent'), ('STUDENT', 'Student')], max_length=10)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'Phone_Numbers',
            },
        ),
        migrations.CreateModel(
            name='StudentParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_relationships', to='Admin_app.parents')),
            ],
            options={
                'db_table': 'Link_StudentParent',
            },
        ),
        migrations.CreateModel(
            name='StudentsEnrolmentsPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('dob', models.DateField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('Phone_Number', models.CharField(max_length=20)),
                ('Grade_Level', models.CharField(choices=[('ECD A', 'ECD A'), ('ECD B', 'ECD B'), ('Grade 1', 'Grade 1'), ('Grade 2', 'Grade 2'), ('Grade 3', 'Grade 3'), ('Grade 4', 'Grade 4'), ('Grade 5', 'Grade 5'), ('Grade 6', 'Grade 6'), ('Grade 7', 'Grade 7')], max_length=20)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50)),
                ('house_number', models.CharField(max_length=20)),
                ('Parent_name', models.CharField(max_length=100)),
                ('Parent_surname', models.CharField(max_length=100)),
                ('Parent_Email', models.EmailField(max_length=254)),
                ('Relationship', models.CharField(max_length=20)),
                ('Parent_Phone_Number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'EnrolmentApplications',
            },
        ),
        migrations.CreateModel(
            name='StudentsPry',
            fields=[
                ('RegNumber', models.CharField(db_index=True, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('surname', models.CharField(db_index=True, max_length=50)),
                ('gender', models.CharField(max_length=6)),
                ('dob', models.DateField()),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('profile_photo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='student_images/')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_address', to='Admin_app.address')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_campus', to='Admin_app.campus')),
                ('class_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_allocations', to='Admin_app.classroomspry')),
                ('parents', models.ManyToManyField(through='Admin_app.StudentParent', to='Admin_app.Parents')),
                ('phone_numbers', models.ManyToManyField(related_name='student_phone_numbers', to='Admin_app.PhoneNumbers')),
            ],
            options={
                'db_table': 'StudentsPry',
            },
        ),
        migrations.CreateModel(
            name='SubjectsPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('paper_number', models.CharField(choices=[('1', '1'), ('2', '2')], max_length=10)),
            ],
            options={
                'db_table': 'SubjectsPry',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('role', models.CharField(max_length=50)),
                ('is_online', models.BooleanField(default=False)),
                ('last_logout', models.DateTimeField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('settings', models.TextField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_campus', to='Admin_app.campus')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'auto_created': False,
            },
            managers=[
                ('objects', Admin_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VacationFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacation_fee', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(limit_choices_to={'term__in': ['Holyday April', 'Holyday August', 'Holyday December']}, on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'VacationFee',
            },
        ),
        migrations.CreateModel(
            name='TripsFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips_fee', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'TripsFee',
            },
        ),
        migrations.AddField(
            model_name='studentparent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_relationships', to='Admin_app.studentspry'),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('username', models.CharField(db_index=True, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('surname', models.CharField(db_index=True, max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('position', models.CharField(max_length=50)),
                ('dob', models.DateField()),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced')], max_length=20)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('profile_photo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='staff_images/')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_address', to='Admin_app.address')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_campus', to='Admin_app.campus')),
                ('phone_numbers', models.ManyToManyField(related_name='staff_phone_numbers', to='Admin_app.PhoneNumbers')),
            ],
            options={
                'db_table': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='ResultsPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_work', models.IntegerField()),
                ('p1_exam_mark', models.IntegerField()),
                ('p2_exam_mark', models.IntegerField()),
                ('exams_total_mark', models.CharField(max_length=3)),
                ('total', models.IntegerField()),
                ('symble', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.studentspry')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.subjectspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'ResultsPry',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('Fees', 'Fees'), ('Trips Fee', 'Trips Fee'), ('Vacation Fee', 'Vacation Fee'), ('Exam Fee', 'Exam Fee')], max_length=20)),
                ('object_id', models.IntegerField()),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=20)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'Payments',
            },
        ),
        migrations.AddField(
            model_name='parents',
            name='phone_numbers',
            field=models.ManyToManyField(related_name='parent_phone_numbers', to='Admin_app.PhoneNumbers'),
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fees_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(limit_choices_to={'term__in': ['First', 'Second', 'Third']}, on_delete=django.db.models.deletion.CASCADE, related_name='term_details', to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'Fees',
            },
        ),
        migrations.CreateModel(
            name='ExamMarksPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('mark', models.IntegerField()),
                ('total_marks', models.IntegerField()),
                ('total_mark', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.studentspry')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.subjectspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'ExamMarksPry',
            },
        ),
        migrations.CreateModel(
            name='ExamFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_fee', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'ExamFee',
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('username', models.CharField(db_index=True, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('surname', models.CharField(db_index=True, max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('position', models.CharField(max_length=50)),
                ('dob', models.DateField()),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced')], max_length=20)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('profile_photo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='developer_images/')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_address', to='Admin_app.address')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developer_campus', to='Admin_app.campus')),
                ('phone_numbers', models.ManyToManyField(related_name='developer_phone_numbers', to='Admin_app.PhoneNumbers')),
            ],
            options={
                'db_table': 'Developers',
            },
        ),
        migrations.CreateModel(
            name='ClassWorkPry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('mark', models.IntegerField()),
                ('total_mark', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.studentspry')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.subjectspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'ClassWorkPry',
            },
        ),
        migrations.AddField(
            model_name='classroomspry',
            name='class_teacher',
            field=models.ForeignKey(limit_choices_to={'position': 'TeacherPry'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='Admin_app.staff'),
        ),
        migrations.CreateModel(
            name='StudentAttendancePry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent')], max_length=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.studentspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'StudentsAttendancePry',
                'unique_together': {('student', 'attendance_date')},
            },
        ),
        migrations.CreateModel(
            name='OverallFeesStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('total_outstanding', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_fees', to='Admin_app.studentspry')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin_app.academiccalender')),
            ],
            options={
                'db_table': 'OverallFeesStructure',
                'unique_together': {('student', 'term')},
            },
        ),
    ]
